{"version":3,"sources":["App.jsx","serviceWorker.js","index.js"],"names":["StateContext","createContext","state","setState","ItemContext","item","setItem","gridTemplateColumns","number","type","defaultFr","defaultPx","minFr","maxFr","minPx","maxPx","gridTemplateRows","initItem","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","width","height","justifySelf","alignSelf","Item","Contain","styled","div","_templateObject","_ref","css","_templateObject2","length","Input","input","_templateObject3","Number","_templateObject4","SelectContain","_templateObject5","Label","label","_templateObject6","Select","select","_templateObject7","Option","option","_templateObject8","InputItem","_ref2","_useContext","useContext","react_default","a","createElement","key","placeholder","value","onChange","e","Object","defineProperty","target","SelectItem","_ref3","_useContext2","inputList","_ref4","index","_useReducer","useReducer","preItem","nextItem","objectSpread","_useReducer2","slicedToArray","useEffect","resetFlag","Provider","entries","map","_ref5","_ref6","Div","_templateObject9","_ref7","_templateObject10","ele","join","gridRowGap","gridColumnGap","gridAutoColumns","gridAutoRows","gridTemplateAreas","gridAutoFlow","justifyItems","alignItems","justifyContent","alignContent","containWidth","containHeight","toConsumableArray","Array","count","Right","_templateObject11","Flex","_templateObject12","_templateObject13","Button","button","_templateObject14","_templateObject15","span","_templateObject16","FlexItem","_templateObject17","DivValue","_templateObject18","_useContext5","setInitState","onClick","min","max","App_Contain","Left","_templateObject19","ItemInput","_templateObject20","_templateObject21","ButtonInput","_templateObject22","ItemSelect","_templateObject23","_templateObject24","_templateObject25","_templateObject26","_templateObject27","_templateObject28","prop","selected","DivContain","_templateObject29","DivItem","_templateObject30","ButtonNumber","_templateObject31","initState","gapList","_ref8","_useContext6","arr","indexMap","includes","concat","slice","defaultOptions","moreOptions","selectList","options","_ref9","_useContext7","onMouseDown","tagName","textContent","_ref10","_ref11","_ref12","App","Root","_templateObject32","Header","header","_templateObject33","_templateObject34","minRangeWidth","maxRangeWidth","minRangeHeight","maxRangeHeight","from","Math","sqrt","_useReducer3","preState","newState","_useReducer4","App_Left","App_Right","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","console","log"],"mappings":"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","file":"static/js/main.afda0f53.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext, useEffect } from \"react\"\nimport styled, { css } from \"styled-components\"\n\nconst StateContext = createContext({ state: {}, setState: () => {} })\nconst ItemContext = createContext({ item: {}, setItem: () => {} })\nconst [count, minRangeWidth, maxRangeWidth, minRangeHeight, maxRangeHeight] = [9, 150, 350, 150, 350]\nconst [minContainWidth, maxContainWidth, minContainHeight, maxContainHeight, containWidth, containHeight] = [700, 1300, 700, 1300, 1000, 1000]\nconst gridTemplateColumns = \n{\n  number: 250,\n  type: \"px\",\n  defaultFr: 1,\n  defaultPx: 250,\n  minFr: 1,\n  maxFr: 10,\n  minPx: minRangeWidth,\n  maxPx: maxRangeWidth\n}\nconst gridTemplateRows = {\n  number: 250,\n  type: \"px\",\n  defaultFr: 1,\n  defaultPx: 250,\n  minFr: 1,\n  maxFr: 10,\n  minPx: minRangeHeight,\n  maxPx: maxRangeHeight\n}\n\nconst initItem = {\n  gridColumnStart: \"\",\n  gridColumnEnd: \"\",\n  gridRowStart: \"\",\n  gridRowEnd: \"\",\n  width: \"200\",\n  height: \"\",\n  justifySelf: \"\",\n  alignSelf: \"\"\n}\n\n\nconst Item = (function() {\n  const Contain = styled.div`\n    font-size: 10px;\n    background-color: white;\n    border-radius: 6px;\n    padding: 3px;\n    border: 1px solid grey;\n    ${({ styled }) => css`\n      grid-column-start: ${styled.gridColumnStart};\n      grid-column-end: ${styled.gridColumnEnd};\n      grid-row-start: ${styled.gridRowStart};\n      grid-row-end: ${styled.gridRowEnd};\n      justify-self: ${styled.justifySelf};\n      align-self: ${styled.alignSelf};\n      width: ${styled.width.length > 1 ? styled.width : \"\"}px;\n      height: ${styled.height}px;\n    `}\n  `\n\n  const Input = styled.input`\n    box-sizing: border-box;\n    width: 100%;\n  `\n\n  const Number = styled.div`\n    margin: 5px auto;\n    font-size: 15px;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    text-align: center;\n    color: white;\n    background-color: #4cc198;\n  `\n  const SelectContain = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n    padding: 3px;\n  `\n\n  const Label = styled.label`\n    flex: auto;\n  `\n\n  const Select = styled.select`\n    flex: auto;\n  `\n\n  const Option = styled.option``\n\n  const InputItem = ({ label, type }) => {\n    const { item, setItem } = useContext(ItemContext)\n    return (\n      <Input\n        type=\"number\"\n        key=\"input\"\n        placeholder={label}\n        value={item[type]}\n        onChange={e => setItem({ [type]: e.target.value })}\n      />\n    )\n  }\n\n  const SelectItem = ({ label, type }) => {\n    const { item, setItem } = useContext(ItemContext)\n    return (\n      <SelectContain>\n        <Label>{label}</Label>\n        <Select value={item[type]} onChange={e => setItem({ [type]: e.target.value })}>\n          <Option value=\"\">无</Option>\n          <Option value=\"stretch\">stretch</Option>\n          <Option value=\"start\">start</Option>\n          <Option value=\"end\">end</Option>\n          <Option value=\"center\">center</Option>\n        </Select>\n      </SelectContain>\n    )\n  }\n\n  const inputList = {\n    gridColumnStart: \"grid-column-start\",\n    gridColumnEnd: \"grid-column-end\",\n    gridRowStart: \"grid-row-start\",\n    gridRowEnd: \"grid-row-end\",\n    width: \"width(px)\",\n    height: \"height(px)\"\n  }\n\n\n  return ({ index }) => {\n    const [item, setItem] = useReducer((preItem, nextItem) => ({ ...preItem, ...nextItem }), initItem)\n\n    const { state } = useContext(StateContext)\n\n    useEffect(() => {\n      setItem(initItem)\n    }, [state.resetFlag])\n\n    return (\n      <ItemContext.Provider value={{ item, setItem }}>\n        <Contain styled={item}>\n          <Number>{index}</Number>\n          {Object.entries(inputList).map(([type, label]) => (\n            <InputItem label={label} type={type} key={type} />\n          ))}\n          <SelectItem label=\"justify-self\" type=\"justifySelf\" />\n          <SelectItem label=\"align-self\" type=\"alignSelf\" />\n        </Contain>\n      </ItemContext.Provider>\n    )\n  }\n})()\n\nconst Contain = (function() {\n  const Div = styled.div`\n    display: grid;\n    background-color: #4cc198;\n    border-radius: 6px;\n    padding: 6px;\n    ${({ styled }) => css`\n      grid-template-columns: ${styled.gridTemplateColumns\n        .map(ele => ele.number + ele.type)\n        .join(\" \")};\n      grid-template-rows: ${styled.gridTemplateRows.map(ele => ele.number + ele.type).join(\" \")};\n      grid-row-gap: ${styled.gridRowGap.map(ele => ele.number + ele.type).join(\" \")};\n      grid-column-gap: ${styled.gridColumnGap.map(ele => ele.number + ele.type).join(\" \")};\n      grid-auto-columns: ${styled.gridAutoColumns.map(ele => ele.number + ele.type).join(\" \")};\n      grid-auto-rows: ${styled.gridAutoRows.map(ele => ele.number + ele.type).join()};\n      grid-template-areas: ${styled.gridTemplateAreas};\n      grid-auto-flow: ${styled.gridAutoFlow};\n      justify-items: ${styled.justifyItems};\n      align-items: ${styled.alignItems};\n      justify-content: ${styled.justifyContent};\n      align-content: ${styled.alignContent};\n      width: ${styled.containWidth}px;\n      height: ${styled.containHeight}px;\n    `}\n  `\n\n  return () => {\n    const { state } = useContext(StateContext)\n    return (\n      <Div styled={state}>\n        {[...Array(state.count)].map((ele, index) => (\n          <Item key={index} index={index} />\n        ))}\n      </Div>\n    )\n  }\n})()\n\nconst Right = (function() {\n  const Right = styled.div`\n    flex: 1.5;\n  `\n\n  const Flex = styled.div`\n    display: flex;\n    margin: 20px 0;\n    flex-wrap: wrap;\n  `\n\n  const Label = styled.label`\n    display: inline-block;\n    margin-right: 10px;\n  `\n\n  const Button = styled.button`\n    /* display: inline-block; */\n    flex: none;\n    margin: 0 5px;\n  `\n\n  const Input = styled.input`\n    flex: none;\n    width: 60px;\n  `\n\n  const Number = styled.span`\n    display: inline-block;\n    width: 30px;\n  `\n\n  const FlexItem = styled.div`\n    display: flex;\n    margin-right: 20px;\n    align-items: center;\n    flex: none;\n  `\n\n  const DivValue = styled.div`\n    width: 50px;\n  `;\n  \n\n  return () => {\n    const { state, setState, setInitState } = useContext(StateContext)\n\n    return (\n      <Right>\n        <Flex>\n          <FlexItem>\n            <Label>项目数量：</Label>\n            <Number>{state.count}</Number>\n            <Button onClick={e => setState({ count: state.count + 1 })}>+</Button>\n            <Button onClick={e => setState({ count: state.count ? state.count - 1 : 0 })}>-</Button>\n          </FlexItem>\n          <FlexItem>\n            <Label>容器的宽度:</Label>\n            <Input type=\"range\" min={minContainWidth} max={maxContainWidth} value={state.containWidth} onChange={e => setState({containWidth: e.target.value})}></Input>\n            <DivValue>{state.containWidth}px</DivValue>\n          </FlexItem>\n          <FlexItem>\n            <Label>容器的高度:</Label>\n            <Input type=\"range\" min={minContainHeight} max={maxContainHeight} value={state.containHeight} onChange={e => setState({containHeight: e.target.value})}></Input>\n            <DivValue>{state.containHeight}px</DivValue>\n          </FlexItem>\n          <Button onClick={setInitState}>容器重置</Button>\n          <Button onClick={() => setState({ ...state, resetFlag: !state.resetFlag })}>\n            项目重置\n          </Button>\n        </Flex>\n        <Contain state={state} setState={setState} />\n      </Right>\n    )\n  }\n})()\n\nconst Left = (function() {\n  const Left = styled.div`\n    margin-right: 20px;\n    flex: 1;\n  `\n  const ItemInput = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    flex: none;\n    margin: 0 5px;\n  `\n\n  const Input = styled.input`\n    flex: none;\n    width: 60px;\n  `\n  const ButtonInput = styled.button`\n    display: inline-block;\n    flex: none;\n    margin: 0 5px;\n  `\n\n  const ItemSelect = styled.div`\n    flex: auto;\n    display: flex;\n    flex-direction: column;\n    margin: 0 5px;\n  `\n\n  const Label = styled.label`\n    flex: none;\n    font-size: 16px;\n    font-weight: 600;\n    line-height: 60px;\n  `\n\n  const Select = styled.select``\n  const Option = styled.option``\n\n  const Contain = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: start;\n    padding-bottom: 30px;\n    margin-bottom: 30px;\n    border-bottom: 1px solid #4cc198;\n  `\n\n  const Button = styled.button`\n    font-size: 15px;\n    word-wrap: break-word;\n    outline: none;\n    border: 1px solid #4cc198;\n    color: ${prop => (prop.selected ? \"white\" : \"#4cc198\")};\n    background-color: ${prop => (!prop.selected ? \"white\" : \"#4cc198\")};\n    border-radius: 3px;\n    line-height:25px;\n    cursor: pointer;\n    margin: 5px 0;\n  `\n  const DivContain = styled.div`\n    display: flex;\n    align-items: center;\n    margin-left: 8px;\n  `\n\n  const DivItem = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 3px;\n    border: 1px solid #4cc198;\n    border-radius: 6px;\n    width: 160px;\n    flex: none;\n  `\n\n  const ButtonNumber = styled.button`\n    margin: 0 3px;\n  `\n  const inputList = {\n    gridTemplateColumns: \"rid-template-columns\",\n    gridTemplateRows: \"grid-template-rows\",\n    gridRowGap: \"grid-row-gap\",\n    gridColumnGap: \"grid-column-gap\",\n    gridAutoColumns: \"grid-auto-columns\",\n    gridAutoRows: \"grid-auto-rows\"\n  }\n\n  const initState = {\n    gridTemplateColumns,\n    gridTemplateRows\n  }\n\n  const gapList = [\"gridRowGap\", \"gridColumnGap\"]\n\n  const InputItem = ({ label, type }) => {\n    const { state, setState } = useContext(StateContext)\n    return (\n      <ItemInput>\n        <Label>{label}：</Label>\n        <DivItem>\n          {state[type].map((ele, index, arr) => (\n            <DivContain key={index}>\n              <Input\n                type=\"range\"\n                value={ele.number}\n                min={ele.type === \"fr\" ? ele.minFr : ele.minPx}\n                max={ele.type === \"fr\" ? ele.maxFr : ele.maxPx}\n                onChange={e =>\n                  setState({\n                    [type]: arr.map((ele, indexMap) =>\n                      index === indexMap ? { ...ele, number: e.target.value } : ele\n                    )\n                  })\n                }\n              />\n              <ButtonNumber>{ele.number}</ButtonNumber>\n              <Select\n                value={ele.type}\n                onChange={e =>\n                  setState({\n                    [type]: arr.map((ele, indexMap) =>\n                      index === indexMap\n                        ? {\n                            ...ele,\n                            type: e.target.value,\n                            number: e.target.value === \"fr\" ? ele.defaultFr : ele.defaultPx\n                          }\n                        : ele\n                    )\n                  })\n                }\n              >\n                {!gapList.includes(type) && <Option value=\"fr\">fr</Option>}\n                <Option value=\"px\">px</Option>\n              </Select>\n            </DivContain>\n          ))}\n          {initState[type] && (\n            <DivContain>\n              <ButtonInput onClick={() => setState({ [type]: [...state[type], initState[type]] })}>\n                +\n              </ButtonInput>\n              <ButtonInput\n                onClick={() => state[type].length && setState({ [type]: state[type].slice(0, -1) })}\n              >\n                -\n              </ButtonInput>\n            </DivContain>\n          )}\n        </DivItem>\n      </ItemInput>\n    )\n  }\n\n  const defaultOptions = [\"start\", \"end\", \"center\", \"stretch\"]\n  const moreOptions = [\"space-around\", \"space-between\", \"space-evenly\"]\n  const flowOptions = [\"row\", \"column\", \"row dense\", \"column dense\"]\n  const selectList = [\n    { label: \"justify-items\", type: \"justifyItems\", options: defaultOptions },\n    { label: \"align-items\", type: \"alignItems\", options: defaultOptions },\n    {\n      label: \"justify-content\",\n      type: \"justifyContent\",\n      options: [...defaultOptions, ...moreOptions]\n    },\n    {\n      label: \"align-content\",\n      type: \"alignContent\",\n      options: [...defaultOptions, ...moreOptions]\n    },\n    { label: \"grid-auto-flow\", type: \"gridAutoFlow\", options: flowOptions }\n  ]\n\n  const SelectItem = ({ label, type, options }) => {\n    const { state, setState } = useContext(StateContext)\n    return (\n      <ItemSelect onMouseDown={e => e.target.tagName === 'BUTTON' && setState({ [type]: e.target.textContent })}>\n        <Label>{label}：</Label>\n        {options.map((ele, index) => (\n          <Button key={ele} selected={ele === state[type]}>{ele}</Button>\n        ))}\n      </ItemSelect>\n    )\n  }\n\n  return () => {\n    return (\n      <Left>\n        <Contain>\n          {Object.entries(inputList).map(([type, label]) => (\n            <InputItem label={label} type={type} key={type} />\n          ))}\n        </Contain>\n        <Contain>\n          {selectList.map(({ label, type, options }) => (\n            <SelectItem label={label} type={type} options={options} key={type} />\n          ))}\n        </Contain>\n      </Left>\n    )\n  }\n})()\nconst App = (function() {\n  const Root = styled.div`\n    height: 100%;\n    color: #2c3e50;\n    background: #ecf0f1;\n  `\n\n  const Header = styled.header`\n    font-size: 30px;\n    font-weight: 800;\n    text-align: center;\n  `\n\n  const Flex = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    background-color: white;\n    border: 1px solid gray;\n    border-radius: 10px;\n    margin: 0 20px;\n    padding: 20px 20px;\n  `\n\n  const initState = {\n    count,\n    minRangeWidth,\n    maxRangeWidth,\n    minRangeHeight,\n    maxRangeHeight,\n    gridTemplateColumns: Array.from(Array(Math.sqrt(count))).map(() => gridTemplateColumns),\n    gridTemplateRows: Array.from(Array(Math.sqrt(count))).map(() => gridTemplateRows),\n    gridRowGap: [{ number: 10, type: \"px\", minPx: 10, maxPx: 50 }],\n    gridColumnGap: [{ number: 10, type: \"px\", minPx: 10, maxPx: 50 }],\n    gridAutoColumns: [\n      { number: 20, type: \"px\", minPx: minRangeWidth, maxPx: maxRangeWidth, defaultFr: 1, defaultPx: 110 }\n    ],\n    gridAutoRows: [\n      { number: 20, type: \"px\", minPx: minRangeHeight, maxPx: maxRangeHeight, defaultFr: 1, defaultPx: 110 }\n    ],\n    gridTemplateAreas: \"\",\n    justifyItems: \"start\",\n    alignItems: \"start\",\n    justifyContent: \"start\",\n    alignContent: \"start\",\n    gridAutoFlow: \"row\",\n    containWidth,\n    containHeight,\n    resetFlag: false\n  }\n\n  return () => {\n    const [state, setState] = useReducer(\n      (preState, newState) => ({ ...preState, ...newState }),\n      initState\n    )\n    const setInitState = () => setState(initState)\n    return (\n      <Root>\n        <Header>Grid实时演示</Header>\n        <StateContext.Provider value={{ state, setState, setInitState }}>\n          <Flex>\n            <Left />\n            <Right />\n          </Flex>\n        </StateContext.Provider>\n      </Root>\n    )\n  }\n})()\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconsole.log('%c既然已经点开了，给个start呗', 'color: red;font-size: 30px;')\nconsole.log('https://github.com/yiludege/grid-realtime-display')"],"sourceRoot":""}