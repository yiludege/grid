{"version":3,"sources":["App.jsx","serviceWorker.js","index.js"],"names":["StateContext","createContext","state","setState","ItemContext","item","setItem","Item","Contain","styled","div","_templateObject","_ref","css","_templateObject2","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","justifySelf","alignSelf","width","length","height","Input","input","_templateObject3","Number","_templateObject4","SelectContain","_templateObject5","Label","label","_templateObject6","Select","select","_templateObject7","Option","option","_templateObject8","InputItem","_ref2","type","_useContext","useContext","react_default","a","createElement","key","placeholder","value","onChange","e","Object","defineProperty","target","SelectItem","_ref3","_useContext2","inputList","initItem","_ref4","index","_useReducer","useReducer","preItem","nextItem","objectSpread","_useReducer2","slicedToArray","useEffect","resetFlag","Provider","entries","map","_ref5","_ref6","Div","_templateObject9","_ref7","_templateObject10","gridTemplateColumns","ele","number","join","gridTemplateRows","gridRowGap","gridColumnGap","gridAutoColumns","gridAutoRows","gridTemplateAreas","gridAutoFlow","justifyItems","alignItems","justifyContent","alignContent","toConsumableArray","Array","count","Right","_templateObject11","Flex","_templateObject12","_templateObject13","Button","button","_templateObject14","_templateObject15","span","_templateObject16","FlexItem","_templateObject17","_templateObject18","_useContext5","setInitState","onClick","App_Contain","Left","_templateObject19","ItemInput","_templateObject20","_templateObject21","ButtonInput","_templateObject22","ItemSelect","_templateObject23","_templateObject24","_templateObject25","_templateObject26","_templateObject27","_templateObject28","_templateObject29","prop","selected","DivContain","_templateObject30","DivItem","_templateObject31","ButtonNumber","_templateObject32","initState","defaultFr","defaultPx","minFr","maxFr","minPx","maxPx","gapList","_ref8","_useContext6","arr","min","max","indexMap","includes","concat","slice","defaultOptions","moreOptions","selectList","options","_ref9","_useContext7","onMouseDown","tagName","textContent","_ref10","_ref11","_ref12","App","Root","_templateObject33","Header","header","_templateObject34","_templateObject35","minWidth","maxWidth","minHeight","maxHeight","_useReducer3","preState","newState","_useReducer4","App_Left","App_Right","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.718b28f3.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext, useEffect } from \"react\"\nimport styled, { css } from \"styled-components\"\n\nconst StateContext = createContext({ state: {}, setState: () => {} })\nconst ItemContext = createContext({ item: {}, setItem: () => {} })\nconst [count, minWidth, maxWidth, minHeight, maxHeight] = [9, 110, 300, 200, 500]\n\nconst Item = (function() {\n  const Contain = styled.div`\n    font-size: 10px;\n    background-color: white;\n    border-radius: 6px;\n    padding: 3px;\n    border: 1px solid grey;\n    ${({ styled }) => css`\n      grid-column-start: ${styled.gridColumnStart};\n      grid-column-end: ${styled.gridColumnEnd};\n      grid-row-start: ${styled.gridRowStart};\n      grid-row-end: ${styled.gridRowEnd};\n      justify-self: ${styled.justifySelf}\n      align-self: ${styled.alignSelf}\n      width: ${styled.width.length > 1 ? styled.width : \"\"}px;\n      height: ${styled.height}px;\n    `}\n  `\n\n  const Input = styled.input`\n    box-sizing: border-box;\n    width: 100%;\n  `\n\n  const Number = styled.div`\n    margin: 5px auto;\n    font-size: 15px;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    text-align: center;\n    color: white;\n    background-color: #4cc198;\n  `\n  const SelectContain = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n    padding: 3px;\n  `\n\n  const Label = styled.label`\n    flex: auto;\n  `\n\n  const Select = styled.select`\n    flex: auto;\n  `\n\n  const Option = styled.option``\n\n  const InputItem = ({ label, type }) => {\n    const { item, setItem } = useContext(ItemContext)\n    return (\n      <Input\n        type=\"number\"\n        key=\"input\"\n        placeholder={label}\n        value={item[type]}\n        onChange={e => setItem({ [type]: e.target.value })}\n      />\n    )\n  }\n\n  const SelectItem = ({ label, type }) => {\n    const { item, setItem } = useContext(ItemContext)\n    return (\n      <SelectContain>\n        <Label>{label}</Label>\n        <Select value={item[type]} onChange={e => setItem({ [type]: e.target.value })}>\n          <Option value=\"stretch\">stretch</Option>\n          <Option value=\"start\">start</Option>\n          <Option value=\"end\">end</Option>\n          <Option value=\"center\">center</Option>\n        </Select>\n      </SelectContain>\n    )\n  }\n\n  const inputList = {\n    gridColumnStart: \"grid-column-start\",\n    gridColumnEnd: \"grid-column-end\",\n    gridRowStart: \"grid-row-start\",\n    gridRowEnd: \"grid-row-end\",\n    width: \"width(px)\",\n    height: \"height(px)\"\n  }\n\n  const initItem = {\n    gridColumnStart: \"\",\n    gridColumnEnd: \"\",\n    gridRowStart: \"\",\n    gridRowEnd: \"\",\n    width: \"\",\n    height: \"\",\n    justifySelf: \"stretch\",\n    alignSelf: \"stretch\"\n  }\n\n  return ({ index }) => {\n    const [item, setItem] = useReducer((preItem, nextItem) => ({ ...preItem, ...nextItem }), initItem)\n\n    const { state } = useContext(StateContext)\n\n    useEffect(() => {\n      setItem(initItem)\n    }, [state.resetFlag])\n\n    return (\n      <ItemContext.Provider value={{ item, setItem }}>\n        <Contain styled={item}>\n          <Number>{index}</Number>\n          {Object.entries(inputList).map(([type, label]) => (\n            <InputItem label={label} type={type} key={type} />\n          ))}\n          <SelectItem label=\"justify-self\" type=\"justifySelf\" />\n          <SelectItem label=\"align-self\" type=\"alignSelf\" />\n        </Contain>\n      </ItemContext.Provider>\n    )\n  }\n})()\n\nconst Contain = (function() {\n  const Div = styled.div`\n    display: grid;\n    background-color: #4cc198;\n    border-radius: 6px;\n    padding: 6px;\n    ${({ styled }) => css`\n      grid-template-columns: ${styled.gridTemplateColumns\n        .map(ele => ele.number + ele.type)\n        .join(\" \")};\n      grid-template-rows: ${styled.gridTemplateRows.map(ele => ele.number + ele.type).join(\" \")};\n      grid-row-gap: ${styled.gridRowGap.map(ele => ele.number + ele.type).join(\" \")};\n      grid-column-gap: ${styled.gridColumnGap.map(ele => ele.number + ele.type).join(\" \")};\n      grid-auto-columns: ${styled.gridAutoColumns.map(ele => ele.number + ele.type).join(\" \")};\n      grid-auto-rows: ${styled.gridAutoRows.map(ele => ele.number + ele.type).join()};\n      grid-template-areas: ${styled.gridTemplateAreas};\n      grid-auto-flow: ${styled.gridAutoFlow};\n      justify-items: ${styled.justifyItems};\n      align-items: ${styled.alignItems};\n      justify-content: ${styled.justifyContent};\n      align-content: ${styled.alignContent};\n    `}\n  `\n\n  return () => {\n    const { state } = useContext(StateContext)\n    return (\n      <Div styled={state}>\n        {[...Array(state.count)].map((ele, index) => (\n          <Item key={index} index={index} />\n        ))}\n      </Div>\n    )\n  }\n})()\n\nconst Right = (function() {\n  const Right = styled.div`\n    flex: 1;\n  `\n\n  const Flex = styled.div`\n    display: flex;\n    margin: 20px 0;\n    flex-wrap: wrap;\n  `\n\n  const Label = styled.label`\n    display: inline-block;\n    margin-right: 10px;\n  `\n\n  const Button = styled.button`\n    /* display: inline-block; */\n    flex: none;\n    margin: 0 5px;\n  `\n\n  const Input = styled.input`\n    width: 60px;\n  `\n\n  const Number = styled.span`\n    display: inline-block;\n    width: 30px;\n  `\n\n  const Span = styled.span`\n    display: inline-block;\n  `\n\n  const FlexItem = styled.div`\n    display: flex;\n    margin-right: 20px;\n    align-items: center;\n    flex: none;\n  `\n\n  return () => {\n    const { state, setState, setInitState } = useContext(StateContext)\n\n    return (\n      <Right>\n        <Flex>\n          <FlexItem>\n            <Label>项目数量：</Label>\n            <Number>{state.count}</Number>\n            <Button onClick={e => setState({ count: state.count + 1 })}>+</Button>\n            <Button onClick={e => setState({ count: state.count ? state.count - 1 : 0 })}>-</Button>\n          </FlexItem>\n          <Button onClick={setInitState}>容器重置</Button>\n          <Button onClick={() => setState({ ...state, resetFlag: !state.resetFlag })}>\n            项目重置\n          </Button>\n        </Flex>\n        <Contain state={state} setState={setState} />\n      </Right>\n    )\n  }\n})()\n\nconst Left = (function() {\n  const Left = styled.div`\n    margin-right: 20px;\n    flex: 1;\n  `\n  const ItemInput = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    flex: none;\n    margin: 0 5px;\n  `\n\n  const Input = styled.input`\n    flex: none;\n    width: 60px;\n  `\n  const ButtonInput = styled.button`\n    display: inline-block;\n    flex: none;\n    margin: 0 5px;\n  `\n\n  const LabelInput = styled.label`\n    flex: none;\n    font-size: 18px;\n    font-weight: 600;\n    line-height: 60px;\n  `\n  const ItemSelect = styled.div`\n    flex: auto;\n    display: flex;\n    flex-direction: column;\n    margin: 0 5px;\n  `\n\n  const Label = styled.label`\n    flex: none;\n    font-size: 16px;\n    font-weight: 600;\n    line-height: 60px;\n  `\n\n  const Select = styled.select``\n  const Option = styled.option``\n\n  const Contain = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: start;\n    padding-bottom: 30px;\n    margin-bottom: 30px;\n    border-bottom: 1px solid #4cc198;\n  `\n\n  const Button = styled.button`\n    font-size: 15px;\n    word-wrap: break-word;\n    outline: none;\n    border: 1px solid #4cc198;\n    color: ${prop => (prop.selected ? \"white\" : \"#4cc198\")};\n    background-color: ${prop => (!prop.selected ? \"white\" : \"#4cc198\")};\n    border-radius: 3px;\n    line-height:25px;\n    cursor: pointer;\n    margin: 5px 0;\n  `\n  const DivContain = styled.div`\n    display: flex;\n    align-items: center;\n    margin-left: 8px;\n  `\n\n  const DivItem = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 3px;\n    border: 1px solid #4cc198;\n    border-radius: 6px;\n    width: 160px;\n    flex: none;\n  `\n\n  const ButtonNumber = styled.button`\n    margin: 0 3px;\n  `\n  const inputList = {\n    gridTemplateColumns: \"rid-template-columns\",\n    gridTemplateRows: \"grid-template-rows\",\n    gridRowGap: \"grid-row-gap\",\n    gridColumnGap: \"grid-column-gap\",\n    gridAutoColumns: \"grid-auto-columns\",\n    gridAutoRows: \"grid-auto-rows\"\n  }\n\n  const initState = {\n    gridTemplateColumns: {\n      number: 1,\n      type: \"fr\",\n      defaultFr: 1,\n      defaultPx: 110,\n      minFr: 1,\n      maxFr: 10,\n      minPx: minWidth,\n      maxPx: maxWidth\n    },\n    gridTemplateRows: {\n      number: 1,\n      type: \"fr\",\n      defaultFr: 1,\n      defaultPx: 200,\n      minFr: 1,\n      maxFr: 10,\n      minPx: minHeight,\n      maxPx: maxHeight\n    }\n  }\n\n  const gapList = [\"gridRowGap\", \"gridColumnGap\"]\n\n  const InputItem = ({ label, type }) => {\n    const { state, setState } = useContext(StateContext)\n    return (\n      <ItemInput>\n        <Label>{label}：</Label>\n        <DivItem>\n          {state[type].map((ele, index, arr) => (\n            <DivContain key={index}>\n              <Input\n                type=\"range\"\n                value={ele.number}\n                min={ele.type === \"fr\" ? ele.minFr : ele.minPx}\n                max={ele.type === \"fr\" ? ele.maxFr : ele.maxPx}\n                onChange={e =>\n                  setState({\n                    [type]: arr.map((ele, indexMap) =>\n                      index === indexMap ? { ...ele, number: e.target.value } : ele\n                    )\n                  })\n                }\n              />\n              <ButtonNumber>{ele.number}</ButtonNumber>\n              <Select\n                value={ele.type}\n                onChange={e =>\n                  setState({\n                    [type]: arr.map((ele, indexMap) =>\n                      index === indexMap\n                        ? {\n                            ...ele,\n                            type: e.target.value,\n                            number: e.target.value === \"fr\" ? ele.defaultFr : ele.defaultPx\n                          }\n                        : ele\n                    )\n                  })\n                }\n              >\n                {!gapList.includes(type) && <Option value=\"fr\">fr</Option>}\n                <Option value=\"px\">px</Option>\n              </Select>\n            </DivContain>\n          ))}\n          {initState[type] && (\n            <DivContain>\n              <ButtonInput onClick={() => setState({ [type]: [...state[type], initState[type]] })}>\n                +\n              </ButtonInput>\n              <ButtonInput\n                onClick={() => state[type].length && setState({ [type]: state[type].slice(0, -1) })}\n              >\n                -\n              </ButtonInput>\n            </DivContain>\n          )}\n        </DivItem>\n      </ItemInput>\n    )\n  }\n\n  const defaultOptions = [\"start\", \"end\", \"center\", \"stretch\"]\n  const moreOptions = [\"space-around\", \"space-between\", \"space-evenly\"]\n  const flowOptions = [\"row\", \"column\", \"row dense\", \"column dense\"]\n  const selectList = [\n    { label: \"justify-items\", type: \"justifyItems\", options: defaultOptions },\n    { label: \"align-items\", type: \"alignItems\", options: defaultOptions },\n    {\n      label: \"justify-content\",\n      type: \"justifyContent\",\n      options: [...defaultOptions, ...moreOptions]\n    },\n    {\n      label: \"align-content\",\n      type: \"alignContent\",\n      options: [...defaultOptions, ...moreOptions]\n    },\n    { label: \"grid-auto-flow\", type: \"gridAutoFlow\", options: flowOptions }\n  ]\n\n  const SelectItem = ({ label, type, options }) => {\n    const { state, setState } = useContext(StateContext)\n    return (\n      <ItemSelect onMouseDown={e => e.target.tagName === 'BUTTON' && setState({ [type]: e.target.textContent })}>\n        <Label>{label}：</Label>\n        {options.map((ele, index) => (\n          <Button key={ele} selected={ele === state[type]}>{ele}</Button>\n        ))}\n      </ItemSelect>\n    )\n  }\n\n  return () => {\n    return (\n      <Left>\n        <Contain>\n          {Object.entries(inputList).map(([type, label]) => (\n            <InputItem label={label} type={type} key={type} />\n          ))}\n        </Contain>\n        <Contain>\n          {selectList.map(({ label, type, options }) => (\n            <SelectItem label={label} type={type} options={options} key={type} />\n          ))}\n        </Contain>\n      </Left>\n    )\n  }\n})()\nconst App = (function() {\n  const Root = styled.div`\n    height: 100%;\n    color: #2c3e50;\n    background: #ecf0f1;\n  `\n\n  const Header = styled.header`\n    font-size: 30px;\n    font-weight: 800;\n    text-align: center;\n  `\n\n  const Flex = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    background-color: white;\n    border: 1px solid gray;\n    border-radius: 10px;\n    margin: 0 20px;\n    padding: 20px 20px;\n  `\n\n  const initState = {\n    count,\n    minWidth,\n    maxWidth,\n    minHeight,\n    maxHeight,\n    gridTemplateColumns: [\n      {\n        number: 1,\n        type: \"fr\",\n        defaultFr: 1,\n        defaultPx: 110,\n        minFr: 1,\n        maxFr: 10,\n        minPx: minWidth,\n        maxPx: maxWidth\n      },\n      {\n        number: 1,\n        type: \"fr\",\n        defaultFr: 1,\n        defaultPx: 110,\n        minFr: 1,\n        maxFr: 10,\n        minPx: minWidth,\n        maxPx: maxWidth\n      },\n      {\n        number: 1,\n        type: \"fr\",\n        defaultFr: 1,\n        defaultPx: 110,\n        minFr: 1,\n        maxFr: 10,\n        minPx: minWidth,\n        maxPx: maxWidth\n      }\n    ],\n    gridTemplateRows: [\n      {\n        number: 1,\n        type: \"fr\",\n        defaultFr: 1,\n        defaultPx: 200,\n        minFr: 1,\n        maxFr: 10,\n        minPx: minHeight,\n        maxPx: maxHeight\n      },\n      {\n        number: 1,\n        type: \"fr\",\n        defaultFr: 1,\n        defaultPx: 200,\n        minFr: 1,\n        maxFr: 10,\n        minPx: minHeight,\n        maxPx: maxHeight\n      },\n      {\n        number: 1,\n        type: \"fr\",\n        defaultFr: 1,\n        defaultPx: 200,\n        minFr: 1,\n        maxFr: 10,\n        minPx: minHeight,\n        maxPx: maxHeight\n      }\n    ],\n    gridRowGap: [{ number: 10, type: \"px\", minPx: 10, maxPx: 50 }],\n    gridColumnGap: [{ number: 10, type: \"px\", minPx: 10, maxPx: 50 }],\n    gridAutoColumns: [\n      { number: 20, type: \"px\", minPx: minWidth, maxPx: maxWidth, defaultFr: 1, defaultPx: 110 }\n    ],\n    gridAutoRows: [\n      { number: 20, type: \"px\", minPx: minHeight, maxPx: maxHeight, defaultFr: 1, defaultPx: 110 }\n    ],\n    gridTemplateAreas: \"\",\n    justifyItems: \"stretch\",\n    alignItems: \"stretch\",\n    justifyContent: \"stretch\",\n    alignContent: \"stretch\",\n    gridAutoFlow: \"row\",\n    resetFlag: false\n  }\n\n  return () => {\n    const [state, setState] = useReducer(\n      (preState, newState) => ({ ...preState, ...newState }),\n      initState\n    )\n    const setInitState = () => setState(initState)\n    return (\n      <Root>\n        <Header>Grid实时演示</Header>\n        <StateContext.Provider value={{ state, setState, setInitState }}>\n          <Flex>\n            <Left />\n            <Right />\n          </Flex>\n        </StateContext.Provider>\n      </Root>\n    )\n  }\n})()\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}