{"version":3,"sources":["App.jsx","serviceWorker.js","index.js"],"names":["StateContext","createContext","state","setState","ItemContext","item","setItem","gridTemplateColumns","number","type","defaultFr","defaultPx","minFr","maxFr","minPx","maxPx","gridTemplateRows","initItem","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","width","height","justifySelf","alignSelf","Item","Contain","styled","div","_templateObject","_ref","css","_templateObject2","length","Input","input","_templateObject3","Number","_templateObject4","SelectContain","_templateObject5","Label","label","_templateObject6","Select","select","_templateObject7","Option","option","_templateObject8","InputItem","_ref2","_useContext","useContext","react_default","a","createElement","key","placeholder","value","onChange","e","Object","defineProperty","target","SelectItem","_ref3","_useContext2","inputList","_ref4","index","_useReducer","useReducer","preItem","nextItem","objectSpread","_useReducer2","slicedToArray","useEffect","resetFlag","Provider","entries","map","_ref5","_ref6","BackgroundItem","_templateObject9","_ref7","_useReducer3","_useReducer4","BackgroundContain","Div","_templateObject10","_ref8","_templateObject11","ele","join","gridRowGap","gridColumnGap","gridAutoColumns","gridAutoRows","gridTemplateAreas","gridAutoFlow","justifyItems","alignItems","justifyContent","alignContent","containWidth","containHeight","toConsumableArray","Array","count","_templateObject12","_ref9","_templateObject13","Wrap","_templateObject14","_ref10","_templateObject15","Right","_templateObject16","Flex","_templateObject17","_templateObject18","Button","button","_templateObject19","_templateObject20","span","_templateObject21","FlexItem","_templateObject22","DivValue","_templateObject23","_useContext7","setInitState","onClick","min","max","App_Contain","Left","_templateObject24","ItemInput","_templateObject25","_templateObject26","ButtonInput","_templateObject27","ItemSelect","_templateObject28","_templateObject29","_templateObject30","_templateObject31","_templateObject32","_templateObject33","prop","selected","DivContain","_templateObject34","DivItem","_templateObject35","ButtonNumber","_templateObject36","initState","gapList","_ref11","_useContext8","arr","indexMap","includes","concat","slice","defaultOptions","moreOptions","selectList","options","_ref12","_useContext9","onMouseDown","tagName","textContent","_ref13","_ref14","_ref15","App","Root","_templateObject37","Header","header","_templateObject38","_templateObject39","minRangeWidth","maxRangeWidth","minRangeHeight","maxRangeHeight","from","Math","sqrt","_useReducer5","preState","newState","_useReducer6","App_Left","App_Right","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","console","log"],"mappings":"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","file":"static/js/main.0077bb77.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext, useEffect } from \"react\"\nimport styled, { css } from \"styled-components\"\n\nconst StateContext = createContext({ state: {}, setState: () => {} })\nconst ItemContext = createContext({ item: {}, setItem: () => {} })\nconst [count, minRangeWidth, maxRangeWidth, minRangeHeight, maxRangeHeight] = [9, 150, 350, 150, 350]\nconst [minContainWidth, maxContainWidth, minContainHeight, maxContainHeight, containWidth, containHeight] = [700, 1300, 700, 1300, 1000, 1000]\nconst gridTemplateColumns = \n{\n  number: 250,\n  type: \"px\",\n  defaultFr: 1,\n  defaultPx: 250,\n  minFr: 1,\n  maxFr: 10,\n  minPx: minRangeWidth,\n  maxPx: maxRangeWidth\n}\nconst gridTemplateRows = {\n  number: 250,\n  type: \"px\",\n  defaultFr: 1,\n  defaultPx: 250,\n  minFr: 1,\n  maxFr: 10,\n  minPx: minRangeHeight,\n  maxPx: maxRangeHeight\n}\n\nconst initItem = {\n  gridColumnStart: \"\",\n  gridColumnEnd: \"\",\n  gridRowStart: \"\",\n  gridRowEnd: \"\",\n  width: \"200\",\n  height: \"\",\n  justifySelf: \"\",\n  alignSelf: \"\"\n}\n\nconst Item = (function() {\n  const Contain = styled.div`\n    font-size: 10px;\n    background-color: white;\n    border-radius: 6px;\n    padding: 3px;\n    border: 1px solid #000000;\n    ${({ styled }) => css`\n      grid-column-start: ${styled.gridColumnStart};\n      grid-column-end: ${styled.gridColumnEnd};\n      grid-row-start: ${styled.gridRowStart};\n      grid-row-end: ${styled.gridRowEnd};\n      justify-self: ${styled.justifySelf};\n      align-self: ${styled.alignSelf};\n      width: ${styled.width.length > 1 ? styled.width : \"\"}px;\n      height: ${styled.height}px;\n    `}\n  `;\n\n  const Input = styled.input`\n    box-sizing: border-box;\n    width: 100%;\n  `;\n\n  const Number = styled.div`\n    margin: 5px auto;\n    font-size: 15px;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    text-align: center;\n    color: white;\n    background-color: #4cc198;\n  `;\n  const SelectContain = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n    padding: 3px;\n  `;\n\n  const Label = styled.label`\n    flex: auto;\n  `;\n\n  const Select = styled.select`\n    flex: auto;\n  `;\n\n  const Option = styled.option``;\n\n  const InputItem = ({ label, type }) => {\n    const { item, setItem } = useContext(ItemContext);\n    return (\n      <Input\n        type=\"number\"\n        key=\"input\"\n        placeholder={label}\n        value={item[type]}\n        onChange={e => setItem({ [type]: e.target.value })}\n      />\n    );\n  };\n\n  const SelectItem = ({ label, type }) => {\n    const { item, setItem } = useContext(ItemContext);\n    return (\n      <SelectContain>\n        <Label>{label}</Label>\n        <Select value={item[type]} onChange={e => setItem({ [type]: e.target.value })}>\n          <Option value=\"\">无</Option>\n          <Option value=\"stretch\">stretch</Option>\n          <Option value=\"start\">start</Option>\n          <Option value=\"end\">end</Option>\n          <Option value=\"center\">center</Option>\n        </Select>\n      </SelectContain>\n    );\n  };\n\n  const inputList = {\n    gridColumnStart: \"grid-column-start\",\n    gridColumnEnd: \"grid-column-end\",\n    gridRowStart: \"grid-row-start\",\n    gridRowEnd: \"grid-row-end\",\n    width: \"width(px)\",\n    height: \"height(px)\"\n  };\n\n  return ({ index }) => {\n    const [item, setItem] = useReducer((preItem, nextItem) => ({ ...preItem, ...nextItem }), initItem);\n\n    const { state } = useContext(StateContext);\n\n    useEffect(() => {\n      setItem(initItem);\n    }, [state.resetFlag]);\n\n    return (\n      <ItemContext.Provider value={{ item, setItem }}>\n        <Contain styled={item}>\n          <Number>{index}</Number>\n          {Object.entries(inputList).map(([type, label]) => (\n            <InputItem label={label} type={type} key={type} />\n          ))}\n          <SelectItem label=\"justify-self\" type=\"justifySelf\" />\n          <SelectItem label=\"align-self\" type=\"alignSelf\" />\n        </Contain>\n      </ItemContext.Provider>\n    );\n  };\n})();\n\nconst BackgroundItem = (function() {\n  const Contain = styled.div`\n    background: none;\n    font-size: 10px;\n    border: 1px dashed #666666;\n    padding: 3px;\n    justify-self: stretch;\n    align-self: stretch;\n  `;\n\n  return ({ index }) => {\n    const [item, setItem] = useReducer((preItem, nextItem) => ({ ...preItem, ...nextItem }), initItem);\n\n    const { state } = useContext(StateContext);\n\n    useEffect(() => {\n      setItem(initItem);\n    }, [state.resetFlag]);\n\n    return (\n      <ItemContext.Provider value={{ item, setItem }}>\n        <Contain styled={item}></Contain>\n      </ItemContext.Provider>\n    );\n  };\n})();\n\nconst BackgroundContain = (function() {\n  const Div = styled.div`\n    display: grid;\n    background-color: #4cc198;\n    border-radius: 6px;\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 1;\n    width: 100%;\n    height: 100%;\n    padding: 6px;\n    ${({ styled }) => css`\n      grid-template-columns: ${styled.gridTemplateColumns.map(ele => ele.number + ele.type).join(\" \")};\n      grid-template-rows: ${styled.gridTemplateRows.map(ele => ele.number + ele.type).join(\" \")};\n      grid-row-gap: ${styled.gridRowGap.map(ele => ele.number + ele.type).join(\" \")};\n      grid-column-gap: ${styled.gridColumnGap.map(ele => ele.number + ele.type).join(\" \")};\n      grid-auto-columns: ${styled.gridAutoColumns.map(ele => ele.number + ele.type).join(\" \")};\n      grid-auto-rows: ${styled.gridAutoRows.map(ele => ele.number + ele.type).join()};\n      grid-template-areas: ${styled.gridTemplateAreas};\n      grid-auto-flow: ${styled.gridAutoFlow};\n      justify-items: ${styled.justifyItems};\n      align-items: ${styled.alignItems};\n      justify-content: ${styled.justifyContent};\n      align-content: ${styled.alignContent};\n      width: ${styled.containWidth}px;\n      height: ${styled.containHeight}px;\n    `}\n  `;\n\n  return () => {\n    const { state } = useContext(StateContext);\n    return (\n      <Div styled={state}>\n        {[...Array(state.count)].map((ele, index) => (\n          <BackgroundItem key={index} index={index} />\n        ))}\n      </Div>\n    );\n  };\n})();\n\nconst Contain = (function() {\n  const Div = styled.div`\n    display: grid;\n    position: relative;\n    border-radius: 6px;\n    padding: 6px;\n    z-index: 2;\n    background-color:transparent;\n    ${({ styled }) => css`\n      grid-template-columns: ${styled.gridTemplateColumns.map(ele => ele.number + ele.type).join(\" \")};\n      grid-template-rows: ${styled.gridTemplateRows.map(ele => ele.number + ele.type).join(\" \")};\n      grid-row-gap: ${styled.gridRowGap.map(ele => ele.number + ele.type).join(\" \")};\n      grid-column-gap: ${styled.gridColumnGap.map(ele => ele.number + ele.type).join(\" \")};\n      grid-auto-columns: ${styled.gridAutoColumns.map(ele => ele.number + ele.type).join(\" \")};\n      grid-auto-rows: ${styled.gridAutoRows.map(ele => ele.number + ele.type).join()};\n      grid-template-areas: ${styled.gridTemplateAreas};\n      grid-auto-flow: ${styled.gridAutoFlow};\n      justify-items: ${styled.justifyItems};\n      align-items: ${styled.alignItems};\n      justify-content: ${styled.justifyContent};\n      align-content: ${styled.alignContent};\n      width: 100%;\n      height: 100%;\n    `}\n  `;\n  const Wrap = styled.div`\n    position: relative;\n    ${({ styled }) => css`\n      width: ${styled.containWidth}px;\n      height: ${styled.containHeight}px;\n    `}\n  `;\n\n  return () => {\n    const { state } = useContext(StateContext);\n    return (\n      <Wrap styled={state}>\n        <Div styled={state}>\n          {[...Array(state.count)].map((ele, index) => (\n            <Item key={index} index={index} />\n          ))}\n        </Div>\n        <BackgroundContain></BackgroundContain>\n      </Wrap>\n    );\n  };\n})();\n\n\nconst Right = (function() {\n  const Right = styled.div`\n    flex: 1.5;\n  `\n\n  const Flex = styled.div`\n    display: flex;\n    margin: 20px 0;\n    flex-wrap: wrap;\n  `\n\n  const Label = styled.label`\n    display: inline-block;\n    margin-right: 10px;\n  `\n\n  const Button = styled.button`\n    /* display: inline-block; */\n    flex: none;\n    margin: 0 5px;\n  `\n\n  const Input = styled.input`\n    flex: none;\n    width: 60px;\n  `\n\n  const Number = styled.span`\n    display: inline-block;\n    width: 30px;\n  `\n\n  const FlexItem = styled.div`\n    display: flex;\n    margin-right: 20px;\n    align-items: center;\n    flex: none;\n  `\n\n  const DivValue = styled.div`\n    width: 50px;\n  `;\n  \n\n  return () => {\n    const { state, setState, setInitState } = useContext(StateContext)\n\n    return (\n      <Right>\n        <Flex>\n          <FlexItem>\n            <Label>项目数量：</Label>\n            <Number>{state.count}</Number>\n            <Button onClick={e => setState({ count: state.count + 1 })}>+</Button>\n            <Button onClick={e => setState({ count: state.count ? state.count - 1 : 0 })}>-</Button>\n          </FlexItem>\n          <FlexItem>\n            <Label>容器的宽度:</Label>\n            <Input type=\"range\" min={minContainWidth} max={maxContainWidth} value={state.containWidth} onChange={e => setState({containWidth: e.target.value})}></Input>\n            <DivValue>{state.containWidth}px</DivValue>\n          </FlexItem>\n          <FlexItem>\n            <Label>容器的高度:</Label>\n            <Input type=\"range\" min={minContainHeight} max={maxContainHeight} value={state.containHeight} onChange={e => setState({containHeight: e.target.value})}></Input>\n            <DivValue>{state.containHeight}px</DivValue>\n          </FlexItem>\n          <Button onClick={setInitState}>容器重置</Button>\n          <Button onClick={() => setState({ ...state, resetFlag: !state.resetFlag })}>\n            项目重置\n          </Button>\n        </Flex>\n        <Contain state={state} setState={setState} />\n      </Right>\n    )\n  }\n})()\n\nconst Left = (function() {\n  const Left = styled.div`\n    margin-right: 20px;\n    flex: 1;\n  `\n  const ItemInput = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    flex: none;\n    margin: 0 5px;\n  `\n\n  const Input = styled.input`\n    flex: none;\n    width: 60px;\n  `\n  const ButtonInput = styled.button`\n    display: inline-block;\n    flex: none;\n    margin: 0 5px;\n  `\n\n  const ItemSelect = styled.div`\n    flex: auto;\n    display: flex;\n    flex-direction: column;\n    margin: 0 5px;\n  `\n\n  const Label = styled.label`\n    flex: none;\n    font-size: 16px;\n    font-weight: 600;\n    line-height: 60px;\n  `\n\n  const Select = styled.select``\n  const Option = styled.option``\n\n  const Contain = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: start;\n    padding-bottom: 30px;\n    margin-bottom: 30px;\n    border-bottom: 1px solid #4cc198;\n  `\n\n  const Button = styled.button`\n    font-size: 15px;\n    word-wrap: break-word;\n    outline: none;\n    border: 1px solid #4cc198;\n    color: ${prop => (prop.selected ? \"white\" : \"#4cc198\")};\n    background-color: ${prop => (!prop.selected ? \"white\" : \"#4cc198\")};\n    border-radius: 3px;\n    line-height:25px;\n    cursor: pointer;\n    margin: 5px 0;\n  `\n  const DivContain = styled.div`\n    display: flex;\n    align-items: center;\n    margin-left: 8px;\n  `\n\n  const DivItem = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 3px;\n    border: 1px solid #4cc198;\n    border-radius: 6px;\n    width: 160px;\n    flex: none;\n  `\n\n  const ButtonNumber = styled.button`\n    margin: 0 3px;\n  `\n  const inputList = {\n    gridTemplateColumns: \"rid-template-columns\",\n    gridTemplateRows: \"grid-template-rows\",\n    gridRowGap: \"grid-row-gap\",\n    gridColumnGap: \"grid-column-gap\",\n    gridAutoColumns: \"grid-auto-columns\",\n    gridAutoRows: \"grid-auto-rows\"\n  }\n\n  const initState = {\n    gridTemplateColumns,\n    gridTemplateRows\n  }\n\n  const gapList = [\"gridRowGap\", \"gridColumnGap\"]\n\n  const InputItem = ({ label, type }) => {\n    const { state, setState } = useContext(StateContext)\n    return (\n      <ItemInput>\n        <Label>{label}：</Label>\n        <DivItem>\n          {state[type].map((ele, index, arr) => (\n            <DivContain key={index}>\n              <Input\n                type=\"range\"\n                value={ele.number}\n                min={ele.type === \"fr\" ? ele.minFr : ele.minPx}\n                max={ele.type === \"fr\" ? ele.maxFr : ele.maxPx}\n                onChange={e =>\n                  setState({\n                    [type]: arr.map((ele, indexMap) =>\n                      index === indexMap ? { ...ele, number: e.target.value } : ele\n                    )\n                  })\n                }\n              />\n              <ButtonNumber>{ele.number}</ButtonNumber>\n              <Select\n                value={ele.type}\n                onChange={e =>\n                  setState({\n                    [type]: arr.map((ele, indexMap) =>\n                      index === indexMap\n                        ? {\n                            ...ele,\n                            type: e.target.value,\n                            number: e.target.value === \"fr\" ? ele.defaultFr : ele.defaultPx\n                          }\n                        : ele\n                    )\n                  })\n                }\n              >\n                {!gapList.includes(type) && <Option value=\"fr\">fr</Option>}\n                <Option value=\"px\">px</Option>\n              </Select>\n            </DivContain>\n          ))}\n          {initState[type] && (\n            <DivContain>\n              <ButtonInput onClick={() => setState({ [type]: [...state[type], initState[type]] })}>\n                +\n              </ButtonInput>\n              <ButtonInput\n                onClick={() => state[type].length && setState({ [type]: state[type].slice(0, -1) })}\n              >\n                -\n              </ButtonInput>\n            </DivContain>\n          )}\n        </DivItem>\n      </ItemInput>\n    )\n  }\n\n  const defaultOptions = [\"start\", \"end\", \"center\", \"stretch\"]\n  const moreOptions = [\"space-around\", \"space-between\", \"space-evenly\"]\n  const flowOptions = [\"row\", \"column\", \"row dense\", \"column dense\"]\n  const selectList = [\n    { label: \"justify-items\", type: \"justifyItems\", options: defaultOptions },\n    { label: \"align-items\", type: \"alignItems\", options: defaultOptions },\n    {\n      label: \"justify-content\",\n      type: \"justifyContent\",\n      options: [...defaultOptions, ...moreOptions]\n    },\n    {\n      label: \"align-content\",\n      type: \"alignContent\",\n      options: [...defaultOptions, ...moreOptions]\n    },\n    { label: \"grid-auto-flow\", type: \"gridAutoFlow\", options: flowOptions }\n  ]\n\n  const SelectItem = ({ label, type, options }) => {\n    const { state, setState } = useContext(StateContext)\n    return (\n      <ItemSelect onMouseDown={e => e.target.tagName === 'BUTTON' && setState({ [type]: e.target.textContent })}>\n        <Label>{label}：</Label>\n        {options.map((ele, index) => (\n          <Button key={ele} selected={ele === state[type]}>{ele}</Button>\n        ))}\n      </ItemSelect>\n    )\n  }\n\n  return () => {\n    return (\n      <Left>\n        <Contain>\n          {Object.entries(inputList).map(([type, label]) => (\n            <InputItem label={label} type={type} key={type} />\n          ))}\n        </Contain>\n        <Contain>\n          {selectList.map(({ label, type, options }) => (\n            <SelectItem label={label} type={type} options={options} key={type} />\n          ))}\n        </Contain>\n      </Left>\n    )\n  }\n})()\nconst App = (function() {\n  const Root = styled.div`\n    height: 100%;\n    color: #2c3e50;\n    background: #ecf0f1;\n  `\n\n  const Header = styled.header`\n    font-size: 30px;\n    font-weight: 800;\n    text-align: center;\n  `\n\n  const Flex = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    background-color: white;\n    border: 1px solid gray;\n    border-radius: 10px;\n    margin: 0 20px;\n    padding: 20px 20px;\n  `\n\n  const initState = {\n    count,\n    minRangeWidth,\n    maxRangeWidth,\n    minRangeHeight,\n    maxRangeHeight,\n    gridTemplateColumns: Array.from(Array(Math.sqrt(count))).map(() => gridTemplateColumns),\n    gridTemplateRows: Array.from(Array(Math.sqrt(count))).map(() => gridTemplateRows),\n    gridRowGap: [{ number: 10, type: \"px\", minPx: 10, maxPx: 50 }],\n    gridColumnGap: [{ number: 10, type: \"px\", minPx: 10, maxPx: 50 }],\n    gridAutoColumns: [\n      { number: 20, type: \"px\", minPx: minRangeWidth, maxPx: maxRangeWidth, defaultFr: 1, defaultPx: 110 }\n    ],\n    gridAutoRows: [\n      { number: 20, type: \"px\", minPx: minRangeHeight, maxPx: maxRangeHeight, defaultFr: 1, defaultPx: 110 }\n    ],\n    gridTemplateAreas: \"\",\n    justifyItems: \"start\",\n    alignItems: \"start\",\n    justifyContent: \"start\",\n    alignContent: \"start\",\n    gridAutoFlow: \"row\",\n    containWidth,\n    containHeight,\n    resetFlag: false\n  }\n\n  return () => {\n    const [state, setState] = useReducer(\n      (preState, newState) => ({ ...preState, ...newState }),\n      initState\n    )\n    const setInitState = () => setState(initState)\n    return (\n      <Root>\n        <Header>Grid实时演示</Header>\n        <StateContext.Provider value={{ state, setState, setInitState }}>\n          <Flex>\n            <Left />\n            <Right />\n          </Flex>\n        </StateContext.Provider>\n      </Root>\n    )\n  }\n})()\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconsole.log('%c既然已经点开了，给个start呗', 'color: red;font-size: 30px;')\nconsole.log('https://github.com/yiludege/grid-realtime-display')"],"sourceRoot":""}